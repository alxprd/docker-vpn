#!/bin/sh

create_keys() {
	echo "Create '$server_name' crt/key in CA"
	source ./vars
	./build-key-server $server_name
}

export_keys() {
	echo "Export '$server_name' CA files (ca.crt, server.crt, server.key)"
	rm -f $export_dir/ca.crt
	rm -f $export_dir/server.crt
	rm -f $export_dir/server.key
	cp $ca_dir/ca.crt           $export_dir/ca.crt
	cp $ca_dir/$server_name.crt $export_dir/server.crt
	cp $ca_dir/$server_name.key $export_dir/server.key
}

generate_dhparam() {
	echo "Generate Diffie-Hellman parameter (dhp4096.pem)"
	# Generate Diffie-Hellman parameter. This is a set of randomly
	# generated data used when establishing Perfect Forward Secrecy
	# during creation of a client's session key. The default size is
	# 2048 bits, but OpenVPN's documentation recommends to use a prime
	# size equivalent to your RSA key size. Since you will be using 4096
	# bit RSA keys, create a 4096 bit DH prime. Depending on the size of
	# your Linode, this could take approximately 10 minutes to complete.
	# Note: According to OpenSSL's man page, genpkey -genparam supersedes dhparam.
	rm -f $export_dir/dhp4096.pem
	openssl genpkey -genparam -algorithm DH -out $export_dir/dhp4096.pem -pkeyopt dh_paramgen_prime_len:4096
}

generate_secret() {
	echo "Generate HMAC signature (ta.key)"
	# Require a matching HMAC signature for all packets involved in
	# the TLS handshake between the server and connecting clients.
	# Packets without this signature are dropped. To generate the HMAC
	# signature file:
	rm -f $export_dir/ta.key
	openvpn --genkey --secret $export_dir/ta.key
}

add_server_conf() {
	echo "Add server config (server.conf)"
	rm -f $export_dir/server.conf
	cp /root/files/server.conf $export_dir/server.conf
}

create_package() {
	echo "Create server config package"
	rm -f $output_dir/$package_name
	zip -j $output_dir/$package_name $export_dir/*
	# If you have sensitive information that you want to store in a zip
	# file, use the -e command to encrypt it. You are asked to enter a
	# password and to repeat the password:
	#zip -j $output_dir/$package_name -r $export_dir/* -e
}

export_package() {
	mkdir -p $export_dir
	export_keys
	generate_dhparam
	generate_secret
	add_server_conf
	create_package
}

server_name=$1
package_name=$server_name.zip
ca_dir=/root/ca
export_dir=/root/$server_name
output_dir=/root/output

if [ -f "$ca_dir/$server_name.key" ]; then
	echo "Server '$server_name' exist in CA"
else
	echo "Server '$server_name' doesn't exist in CA"
	create_keys
fi

export_package



